# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  GRADLE_VERSION: '6.0'
  JAVA_VERSION: '8'
  JAVA_VERSION_NAME: '1.8'

jobs:
  build:

    runs-on: ubuntu-${{matrix.version}}
    strategy:
      matrix:
        version: [latest]
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ env.JAVA_VERSION_NAME }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    # - name: Setup Gradle
    #  uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    # - name: Build with Gradle Wrapper
    #  run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      with:
        gradle-version: ${{ env.GRADLE_VERSION}}
    
    - name: Make sure gradlew is executable
      run: chmod +x ./gradlew

    - name: Build with Gradle ${{ env.GRADLE_VERSION}}
      run: ./gradlew build

    # - name: Inspect build artifacts
      # run: ls -laR . -I README.md -I src -I Dockerfile -I ".git*" -I "*gradle*"

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        directory: .
        image: greggorgmailcom/github-actions-tutorial
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # - name: Build and Push Docker Image manually
      # run: |
        # find build/
        # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        # docker build . -f Dockerfile -t greggorgmailcom/github-actions-tutorial:latest
        # docker push greggorgmailcom/github-actions-tutorial:latest

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ env.JAVA_VERSION_NAME }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
